#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
from bisect import bisect_left

HERE = os.path.dirname(__file__)
V2 = os.path.join('tmp', 'v2')
V3 = os.path.join('tmp', 'v3')


class Sentence:

    def __init__(self, sentence):
        self.sentence = sentence
        self.words = get_words(self.sentence)

    def __eq__(self, other):
        if not isinstance(other, type(self)):
            return NotImplemented

        return compare_sents(self.words, other.words) >= 0.8

    def __lt__(self, other):
        if not isinstance(other, type(self)):
            return NotImplemented

        return self.words < other.words

    def __gt__(self, other):
        if not isinstance(other, type(self)):
            return NotImplemented

        return self.words > other.words


def get_words(line):
    words = line.split()
    r = ' '.join([w.split('_')[0].strip('-') for w in words])
    return r.replace(' de o ', ' do ')


def compare_sents(s0, s1):
    w0 = set(s0.split())
    w1 = set(s1.split())

    same = len(w0.intersection(w1))

    try:
        r = same / max(len(w0), len(w1))
    except ZeroDivisionError:
        r = 0
    return r


v2file = os.path.join(V2, 'macmorpho-all.txt')
v3file = os.path.join(V3, 'macmorpho-all.txt')
v2sents = []

with open(v2file) as fd:
    for line in fd.readlines():
        sent = Sentence(line)
        idx = bisect_left(v2sents, sent)
        v2sents.insert(idx, sent)


def find_sent(sent):
    r = bisect_left(v2sents, sent)
    if v2sents[r] == sent:
        return r
    else:
        return None


with open(v3file) as fd:
    for line in fd.readlines():
        sent = Sentence(line)
        idx = find_sent(sent)
        if idx is not None:
            v2sent = v2sents[idx]

            if 'VAUX' in v2sent.sentence:
                print('')
                print('=' * 30)
                print(v2sent.sentence, end='')
                print(sent.sentence, end='')
                print('=' * 30, end='\n\n')
            else:
                print(sent.sentence, end='')
        else:
            print(sent.sentence, end='')
